#!/usr/bin/python


from video_capture import Capture
from frame_writer import FrameWriter
from time_lapse import TimeLapse
from ui import UI
import cv2
import basic_cam_setting
import numpy as np
import argparse
import time
import atexit
import signal
import os

parser = argparse.ArgumentParser(description="Cosmos - Basic Video Astronomy capture application.")
parser.add_argument('--headless',
                    help="Run in headless mode with no UI window.",
                    action='store_true'
)
parser.add_argument('--device',
                    help="set capture device number.",
                    type=int,
                    default=0
)
parser.add_argument('--divider',
                    help="set frame divider.",
                    type=int,
                    default=1
)

parser.add_argument('--filename',
                    help="set capture filename in /run/shm. File will be written to /run/shm/filename.png",
                    default="cosmos"
)
parser.add_argument('--savepath',
                    help="set path where snapshots will be written, default is HOME/Pictures",
                    default=os.path.join(os.path.expanduser("~"), "Pictures")
)
parser.add_argument('--jpg',
                    help="save snapshots and timelapse in jpg instead of png.",
                    action='store_true'
)




args = parser.parse_args()
divider = args.divider
frame_num = 0

cap = Capture(args.device)
cap.start()
ui = UI(cap)

brightness_ui = basic_cam_setting.BrightnessSetting(cap)
contrast_ui = basic_cam_setting.ContrastSetting(cap)
saturation_ui = basic_cam_setting.SaturationSetting(cap)
hue_ui = basic_cam_setting.HueSetting(cap)
timelapse_ui = TimeLapse()
fw = FrameWriter(args.filename, args.savepath, args.jpg)


ui.add_ui(brightness_ui)
ui.add_ui(contrast_ui)
ui.add_ui(saturation_ui)
ui.add_ui(hue_ui)
ui.add_ui(fw)
ui.add_ui(timelapse_ui)

ui_frame = None


def cleanup():
    print "Cleaning up"
    cap.end()
    cv2.destroyAllWindows()

atexit.register(cleanup)

frame = cap.get_frame()

if args.headless:
    while True:
        frame = cap.get_frame()
        fw.process(frame)
        time.sleep(1)
else:
    while ui.keep_running():
        frame_num += 1
        if ((frame_num % divider) == 0):
            frame = cap.get_frame()

        if (frame == None):
            print "Failed to capture frame - check device."
            break;
	

        if (ui_frame == None):
            ui_frame = np.zeros(frame.shape, np.uint8)
    
        if ui.check_keys() > -1:
            ui_frame = np.zeros(frame.shape, np.uint8)
            ui.draw(ui_frame)

        frame = fw.process(frame, ui.save_this_frame() or timelapse_ui.should_capture())
                
        cv2.imshow('cosmos', cv2.bitwise_xor(frame, ui_frame))

